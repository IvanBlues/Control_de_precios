<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAABDAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAggAFAAAAAAAA
        AAAAAAAAAAAALwAAALsAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAMAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAIkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAAAH4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AHAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAA5AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABUAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAiAAAAJAAAAAQAAAAAAAAAAAAAAAAAAAADAAAAIQAAAB0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAA
        ACEAAAAiAAAAIwAAACYAAAAmAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAA8f//AOH/+AAAf/gAAB/wAAAf
        4AAQH+EAcB/hAIAfwwAAH8MAAD+HAAD/hwABHw8AABAPAAAADwCAAYcA8cfnAPGP8wDzj/MA/5/7AP+f
        8wD/j/cA/8/nAP/DjwD/8B8AKAAAABAAAAAgAAAAAQAgAAAAAAAABAAAww4AAMMOAAAAAAAAAAAAAAAA
        AAAAAAAAAIAABQCAANgAgABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAgQARAIAAWQCAAIsAgAD/AIAAqgCBACcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AJIAAACwAIAAxgCAAP8AgAD/AIAA/wCAAP8AgAD8AIAAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACAAAAD5AAAAXwCAALMAgABpAIEALgCAAP8AgACgAIAA/wCAAPgAgAAMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACWAAAA5AAAAAYAhwACAAAAAACBACsAgAD/AIAA3gCAAP8AgAD/AIAAGQAAAAAAAAAAAAAAAAAA
        AAAAAAAYAAAA9wAAAHIAAAAAAIEAEgCAALAAgAD9AIAA/wCAAP8AgAD/AIAArAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAhgAAAOwAAAAMAAAAAACAAJMAgAD/AIAA/wCAAP8AgADAAIAATwCEAAIAAAAAAAAAAAAA
        AAAAAAAAAAAADAAAAO4AAAB8AAAAAAAAAAAAgAC0AIAA/wCAAJcAgAD/AIAAcACAAAQAgABKAAAAAAAA
        AAAAAAAAAAAAAAAAAG8AAADwAAAAEAAAAAAAAAAAAIAAXwCAAP8AgADwAIAA/wCAAM0AgADiAIAA0QAA
        AAAAAABIAAAAqwAAAMEAAADrAAAAjgAAAAAAAAAAAAAAAAAAAAAAgABVAIAAwwCAAP8AgADvAIAAwwCA
        AG8AAAB3AAAA0gAAAFQAAAAgAAAAOwAAAIYAAAA3AAAAAAAAAAAAAAAAAAAAAACDAAcAgAD/AIAAZwAA
        AAAAAAAiAAAAxgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAUgAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAOQCA
        AA4AAAAAAAAAaAAAAD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAG4AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAFQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAqAAAAJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUAAAACAAAAAAAAAAAAAAAAAAAACwAAABMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABcAAAAYAAAAGwAAABUAAAAAAAAAAAAA
        AADH/AAAA/wAAAH4AAAA+AAAQPEAAAHxAAAB4wAAAeMAAAEHAACAAwAAxHkAAOT5AAD8+QAA/PkAAP5z
        AAD+BwAA
</value>
  </data>
</root>